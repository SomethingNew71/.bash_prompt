# Sexy Bash Prompt, inspired by "Extravagant Zsh Prompt"
# Screenshot: http://img.gf3.ca/d54942f474256ec26a49893681c49b5a.png
# A big thanks to \amethyst on Freenode

if [[ $COLORTERM = gnome-* && $TERM = xterm ]]  && infocmp gnome-256color >/dev/null 2>&1; then export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
  tput sgr0
  if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
    # Coles Added Colors
    LIGHTBLUE=$(tput setaf 12)
    DARKBLUE=$(tput setaf 24)
    DARKRED=$(tput setaf 160)
    DARKESTRED=$(tput setaf 196)
    NICEWHITE=$(tput setaf 230)
    YELLOW=$(tput setaf 136)
  else
    # I didn't find alternatives to my colors if your terminal doesnt support
    # 256 colors then upgrade your damn terminal
    MAGENTA=$(tput setaf 5)
    ORANGE=$(tput setaf 4)
    GREEN=$(tput setaf 2)
    PURPLE=$(tput setaf 1)
    WHITE=$(tput setaf 7)
  fi
  BOLD=$(tput bold)
  RESET=$(tput sgr0)
else
  # I didn't find alternatives to my colors if your terminal doesnt support
  # 256 colors then upgrade your damn terminal
  MAGENTA="\033[1;31m"
  ORANGE="\033[1;33m"
  GREEN="\033[1;32m"
  PURPLE="\033[1;35m"
  WHITE="\033[1;37m"
  BOLD=""
  RESET="\033[m"
fi

parse_git_dirty () {
  [[ $(git status 2> /dev/null | tail -n1) == "nothing to commit, working directory clean" ]] && echo "*"
}
parse_git_branch () {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

#this is what determine the actual output
PS1="\[$DARKBLUE\]\h \[$NICEWHITE\]in \[$YELLOW\]\w\[$NICEWHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$DARKRED\]\$(parse_git_branch)\[$NICEWHITE\]\n\$ \[$RESET\]"
